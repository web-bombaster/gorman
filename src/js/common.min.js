$(document).ready(function() {
	// Адаптивное меню
	//Мобильное меню
var touch = $("#touch-menu"); // кнопка меню
var menu = $(".tgnav"); // ul.tgnav - обертка меню
var dropdown = $(".dropdown"); // li.dropdown - элемент меню, содержищий подменю
var dropdownToggle = $(".dropdown-toggle"); // a.dropdown-toggle - кнопка с подменю
var dropdownMenu = $(".dropdown-menu"); // div.dropdown-menu - контейнер для подменю
var link = $(".tgnav a"); // ссылка меню

// По  клику на кнопке меню показываем меню или скрываем
// var menu = $('.tgnav'); // ul.tgnav - обертка меню
$(touch).on("click", function (e) {
	e.preventDefault(); // Убираем действие по умолчанию
	$(this).parent().next(menu).stop().slideToggle(); // Следующему эл-ту с классом .tgnav даем slideToggle
});

// При клике на пункт меню убрать мобильное
$(link).on("click", function (e) {
	console.log('tgnav a');
	var wid = $(window).width();
	if (wid <= 768) {
		menu.removeAttr("style");
	}
});

$(window).resize(function () {
	// возвращает видимость меню для ПК если оно было закрыто на мобильной версии
	var wid = $(window).width();
	if (wid > 768 && menu.is(":hidden")) {
		menu.removeAttr("style");
	}
});

// клик по кнопке с подменю
// var dropdownToggle = $('.dropdown-toggle');
$(dropdownToggle).on("click", function (e) {
	e.preventDefault();
	if ($(this).is(".open")) {
		// если кнопка с классом open, то прячем подменю
		$(this).removeClass("open").next().slideToggle(300);
	} else {
		// если закрыто, то ищем ближайший родительский ul, в нем ищем открытые кнопки .dropdown-toggle.open , закрываем их, закрываем ранее открытые подменю
		$(this)
			.closest("ul")
			.find(".dropdown-toggle.open")
			.removeClass("open")
			.next()
			.slideToggle(300);
		$(this).addClass("open").next().slideToggle(300); // Выбранной кнопке добавляем класс open, открываем подменю
	}
});

// Закрываем подменю по клику вне его (и вне кнопки с подменю)
// var touch = $('#touch-menu');
// var menu = $('.tgnav');
// var dropdownToggle = $('.dropdown-toggle');
// var dropdownMenu = $('.dropdown-menu');
// $(function() {
// 	$(document).click(function(e) {
// 		var clickElementClass = e.target.getAttribute('class'); // определяем класс у элемента, по которому кликнули
// 		var clickElementTagName = e.target.tagName; // определяем тег у элемента, по которому кликнули
// 		var clickElement = clickElementTagName + '.' + clickElementClass; // определяем тег у элемента, по которому кликнули
// 		console.log('clickElement > ' + clickElement);cons
// 		событие клика по веб-документу
// 		var dropdownMenu = $('.dropdown'); // указываем элемент
// 		if (
// 			// !dropdown.is(e.target) && // если клик был не по кнопке
// 			!dropdown.is(e.target) && // если клик был не по нашему элементу
// 			dropdown.has(e.target).length === 0 // и не по его дочерним элементам
// 		) {
// 			dropdown.children(dropdownMenu).removeAttr('style');
// 			$(this).children(dropdownMenu).hide();
// 		}
// 	});
// });

// Закрываем мобильное меню по клику вне его
// var touch = $('#touch-menu');
// var menu = $('.tgnav');
$(function () {
	$(document).click(function (e) {
		// событие клика по веб-документу
		// var dropdown = $('.dropdown'); // указываем элемент
		if (
			!touch.is(e.target) && // если клик был не по кнопке открытия меню
			!menu.is(e.target) && // если клик был не по меню
			menu.has(e.target).length === 0 // и не по его дочерним элементам
		) {
			menu.removeAttr("style");
		}
	});
});
// Инициализация слайдеров
	// http://kenwheeler.github.io/slick/

//Слайдер в шапке сайта
$('.bigslider').slick({
	autoplay: true,
	autoplaySpeed: 5000,
	speed: 1500,
	// adaptiveHeight: false,
	pauseOnHover: false,
	infinite: true,
	slidesToShow: 1,
	slidesToScroll: 1,
	fade: true,
	cssEase: 'ease-in-out',
	dots: false
});

$('.portfolio-box').slick({
	infinite: true,
	centerMode: true,

	// slidesToShow: 5,
	autoplay: true,
	autoplaySpeed: 3000,
	// centerMode: true,
	variableWidth: true,
	// fade: true,
	dots: false,
	slidesToScroll: 1,
	responsive: [
		{
			breakpoint: 992,
			settings: {
				slidesToShow: 4
			}
		},
		{
			breakpoint: 800,
			settings: {
				slidesToShow: 2
			}
		},
		{
			breakpoint: 400,
			settings: {
				slidesToShow: 1
			}
		}
		// You can unslick at a given breakpoint now by adding:
		// settings: "unslick"
		// instead of a settings object
	]
});

//Слайдер видео
// $('.portfolio-slider').slick({
//     pauseOnHover: true,
//     autoplay: true,
//     autoplaySpeed: 4000,
//     adaptiveHeight: true,
// 	infinite: true,
// 	slidesToShow: 1,
// 	slidesToScroll: 1,
// 	fade: true,
// 	dots: false
// });

//Слайдер фото в два ряда
// $('.portfolio-slider-photo').slick({
// 	infinite: true,
// 	slidesToShow: 1,
// 	rows: 2,
// 	slidesPerRow: 4,
// 	autoplay: true,
// 	autoplaySpeed: 4000,
// 	fade: true,
// 	dots: false,
// 	responsive: [
// 		{
// 			breakpoint: 1200,
// 			settings: {
// 				slidesPerRow: 4
// 			}
// 		},
// 		{
// 			breakpoint: 700,
// 			settings: {
// 				slidesPerRow: 2
// 			}
// 		},
// 		{
// 			breakpoint: 500,
// 			settings: {
// 				slidesPerRow: 2
// 			}
// 		}
// 		// You can unslick at a given breakpoint now by adding:
// 		// settings: "unslick"
// 		// instead of a settings object
// 	]
// });

//Слайдер circle3 - кружки три в ряд
// $('.circle3-slider').slick({
// 	infinite: true,
// 	slidesToShow: 3,
// 	autoplay: true,
// 	autoplaySpeed: 4000,
// 	// fade: true,
// 	// dots: false,
// 	slidesToScroll: 1,
// 	responsive: [
// 		{
// 		breakpoint: 1200,
// 		settings: {
// 			slidesToShow: 3
// 		}
// 		},
// 		{
// 		breakpoint: 650,
// 		settings: {
// 			slidesToShow: 2
// 		}
// 		},
// 		{
// 		breakpoint: 400,
// 		settings: {
// 			slidesToShow: 1
// 		}
// 		}
// 		// You can unslick at a given breakpoint now by adding:
// 		// settings: "unslick"
// 		// instead of a settings object
// 	]
// });

//Слайдер партнеры
// $('.partners-wrapper').slick({
// 	infinite: true,
// 	slidesToShow: 5,
// 	autoplay: true,
// 	autoplaySpeed: 4000000,
// 	centerMode: true,
// 	variableWidth: true,
// 	// fade: true,
// 	// dots: false,
// 	slidesToScroll: 1,
// 	responsive: [
// 		{
// 		breakpoint: 1200,
// 		settings: {
// 			slidesToShow: 3
// 		}
// 		},
// 		{
// 		breakpoint: 650,
// 		settings: {
// 			slidesToShow: 2
// 		}
// 		},
// 		{
// 		breakpoint: 400,
// 		settings: {
// 			slidesToShow: 1
// 		}
// 		}
// 		// You can unslick at a given breakpoint now by adding:
// 		// settings: "unslick"
// 		// instead of a settings object
// 	]
// });

//Слайдер отзывы
$('.otzyvy-slider').slick({
	//dots: true,
	//autoplay: true,
	//autoplaySpeed: 4000,
	adaptiveHeight: true,
	infinite: true,
	slidesToShow: 1,
	slidesToScroll: 1,
	fade: true,
	dots: false
});
// Инициализация попапов
	// http://dimsemenov.com/plugins/magnific-popup/

//Попап обычный для картинок с галереей
$('.popup').magnificPopup({
	type: 'image',
	gallery: { enabled: true }
});

//Попап обычный для илайнового контента, например, для скрытых форм
$('.popup_content').magnificPopup({
	type: 'inline',
	midClick: true,
	showCloseBtn: true
});
//$('.popup_content.podpiska').click();

//Попап для видео
$('.magn-youtube, .magn-vimeo, .magn-gmaps').magnificPopup({
	disableOn: 150,
	type: 'iframe',
	mainClass: 'mfp-fade',
	removalDelay: 160,
	preloader: false,
	fixedContentPos: false
});

//Попап для ajax содержимого
$('.simple-ajax-popup').magnificPopup({
	type: 'ajax'
	// closeOnBgClick: false
});
// Валидация и отправка форм
	// Паттерны для валидации форм
// при помощи модификатора "i" укажем, что наш шаблон будет регистронезависимым
var mail_pattern = /^[\.a-z0-9_-]+@[a-z0-9-]+\.[a-z]{2,8}$/i;
var tel_pattern = /^[\+0-9- \(\)]{5,25}$/;
var text_pattern = /^[\a-zа-я0-9- \n\*\+\=\@\.\,\;\:\"\«\»\!\?\(\)\№\%]+$/i;

// Валидация поля по паттерну с помощью маски для телефонов
$('.jsFormPhone').blur(function() {
	// console.log('Тег для $(this)  > ' + $(this).get(0).tagName); // Тег для $(this)
	if ($(this).val() != '') {
		// Если поле заполнено
		if ($(this).val().search(tel_pattern) == 0) {
			// Если удовлетворяет паттерну
			$(this).addClass('succes').removeClass('error');
		} else {
			// Если не удовлетворяет паттерну
			$(this).parent().addClass('error').removeClass('succes');
		}
	} else {
		$(this).parent().addClass('error').removeClass('succes');
		// $('.form .submit').attr('disabled', true);
	}
});

// Валидация поля по паттерну с помощью маски для мейлов
$('.jsFormMail').blur(function() {
	if ($(this).val() != '') {
		// Если поле заполнено
		if ($(this).val().search(mail_pattern) == 0) {
			// Если удовлетворяет паттерну
			$(this).addClass('succes').removeClass('error');
		} else {
			// Если не удовлетворяет паттерну
			$(this).parent().addClass('error').removeClass('succes');
		}
	} else {
		// Если поле пустое
		$(this).parent().addClass('error').removeClass('succes');
	}
});

// Валидация поля по паттерну с помощью маски для текста
$('.jsFormText').blur(function() {
	if ($(this).val() != '') {
		// Если поле заполнено
		if ($(this).val().search(text_pattern) == 0) {
			// Если удовлетворяет паттерну
			$(this).addClass('succes').removeClass('error');
			// console.log('succes - удовлетворяет паттерну, заполнено : ' + $(this).val());
		} else {
			// Если не удовлетворяет паттерну
			$(this).removeClass('succes').addClass('error').parent().addClass('error');
			// console.log('error - не удовлетворяет паттерну, заполнено : ' + $(this).val());
		}
	} else {
		// Если поле пустое
		$(this).removeClass('succes').addClass('error').parent().addClass('error');
		// console.log('error - pusto' + $(this).val());
	}
});

// Проверяем наличие незаполненных обязательных полей по клику на .submit
$(function() {
	$('.submit').click(function() {
		// Определяем обязательные поля
		var required_input = $(this).closest('.form').children('.before').children('input[required]');
		// Определяем обязательные чекбоксы
		var required_checkbox = $(this).closest('.form').find('input[type="checkbox"][required]');

		// Для каждого найденного пустого обязательнього инпута
		$(required_input).each(function() {
			if ($(this).val() == '') {
				$(this).addClass('error').parent().addClass('error');
			}
		});

		// Для незаполненного обязательного чекбокса политики
		$(required_checkbox).each(function() {
			if (required_checkbox.prop('checked') == false) {
				$(this).addClass('error').parent('').addClass('error');
			} else {
				$(this).removeClass('error').addClass('succes').parent('').removeClass('error');
			}
		});
	});
});

// Раздаем класс succes обязательным заполненным чекбоксам
$(function() {
	// Раздаем класс succes обязательным заполненным чекбоксам
	var required_checkbox = $('input[type="checkbox"][required]');
	$(required_checkbox).change(function() {
		// отслеживаем изменение чекбокса
		if ($(this).prop('checked') == false) {
			$(this).removeClass('succes').addClass('error').parent('').addClass('error');
		} else {
			$(this).addClass('succes').removeClass('error').parent('').removeClass('error'); // Для заполненного чекбокса
		}
	});
});

// Убираем классы error у элементов в фокусе
$('input, textarea').focus(function() {
	$(this).removeClass('error').parent().removeClass('error');
});

// Проверка, возможна ли отправка. Если возможна, даем кнопке отправки класс submit
function form_succes() {
	var proveryaemye_polya = $('.form input[required], .jsFormPhone, .jsFormMail, .jsFormText');
	var form_succes = 5;
	// var btn_submit;

	// При потере фокуса с проверяемых полей проверяем форму на наличие классов error. Если они есть, запрещаем отправку формы
	$(proveryaemye_polya).blur(function() {
		// console.log('form input[required] > ' + $(this));
		// console.log('form_succes > ' + form_succes);

		// Если нет классов error разрешить отправку формы
		if ($(this).closest('.form').find('.error').length > 0) {
			form_succes = 0;
			// console.log('form_succes > ' + form_succes);
		} else {
			form_succes = 1;
			// console.log('form_succes > ' + form_succes);
		}

		// Если у проверяемых полей нет классов succes запретить отправку формы
		// $('.form input[required]').each(function() { - неправильный вариант, т.к. он проверял поля всех форм, а не текущей
		$(this).each(function() {
			if ($(this).hasClass('succes')) {
			} else {
				form_succes = 0;
			}
		});

		// Даем кнопке отправки класс submit если отправка разрешена
		var btn_submit = $(this).closest('.form').find('.submit');
		//console.log('btn_submit tag > ' + btn_submit.get(0).tagName);
		if (form_succes == 1) {
			//console.log('Отправка разрешена, делаем submit  > ' + $(this).get(0).tagName);
			btn_submit.attr('type', 'submit');
			// btn_submit.attr('style', 'background-color: #29ec3a;');
			// console.log('Отправка разрешена, делаем submit  > ' + $(this).closest('.form').find('.submit').prop('type'));
			// console.log($(this).closest('.form').find('.submit').attr('type'));
		} else {
			//console.log('Отправка не разрешена, делаем button  > ' + $(this).get(0).tagName);
			btn_submit.attr('type', 'button');
			// btn_submit.attr('style', 'background-color: #d23939;');
			// console.log('Отправка не разрешена, делаем button  > ' +
			// 		$(this).closest('.form').find('.submit').prop('type')
			// );
		}
	});
}

form_succes(); // Вызов проверки возможности отправки формы

//Отправка формы для заказа звонка #zayavka
$('#zayavka').submit(function() {
	$.ajax({
		type: 'POST',
		url: 'mail.php',
		data: $(this).serialize()
	}).done(function() {
		// выполнить после успешной отправки
		$(this).find('input').val('');
		// alert("Спасибо за заявку! Скоро мы с вами свяжемся."); // Сообщение в виде стандартного алерта
		$('#zayavka').trigger('reset');

		$.magnificPopup.close(); // Закрыть открытые попапы
		// Создать попап со своим инлайновым содержимым
		$.magnificPopup.open(
			{
				items: {
					src: '<div class="white-popup-block">Заявка успешно отправлена.<br>Скоро мы с вами свяжемся.</div>'
				},
				removalDelay: 3000,
				showCloseBtn: true,
				type: 'inline'
			},
			0
		);
		$.magnificPopup.close();
	});
	return false;
});


// FAQ аккордион
	$('.accordeon-item__descr').hide(); // скрыли все открытые описания айтемов
$('.accordeon-item__title').on('click', f_accordeon); // по щелчку на заголовок айтема

function f_accordeon(){
	$('.accordeon-item__descr').not($(this).next()).slideUp(); //скрываем все кроме того, что должны открыть
	$(this).next().slideToggle(); // открываем или скрываем блок под заголовком, по которому кликнули
}
// Анимация цифр
	// -include './../js/myscripts/animate-number.js'
	// Скролл вверх
	//Плавный скролинг до блока
$(function() {
	$('.tgnav a, .arrow-top').click(function() {
		var _href = $(this).attr('href');
		$('html, body').animate({ scrollTop: $(_href).offset().top + 'px' }, 1500);
		return false;
	});
});
// Прилипание меню
	// -include './../js/myscripts/sticky.js'
	// -include './../js/myscripts/adaptive-table.js'
});
$(window).on('load', function() {
	// $('.preloader').delay(500).fadeOut('slow');
	$('.preloader').delay(0).fadeOut('slow');
});

// $('.preloader').delay(500).fadeOut('slow');
